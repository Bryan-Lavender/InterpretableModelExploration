env:
    env_name: &env_name "ALE/Breakout-v5"
    record: True
    seed: &seed [69420]
    discrete: True
    min_expected_reward: 432 # max amount of bricks in the game
    obs_dim: !!python/tuple [3, 210, 160]
    action_dim: 4
    
network:
    network_type: "cnn"
    network_config:
        normal:
        cnn:
            - {in_channels: 3, out_channels: 2, kernel_size: 5, stride: 1}
            - {in_channels: 2, out_channels: 4, kernel_size: 3, stride: 1}
        lstm: 

model_training:
    num_episodes_eval: 5
    record_freq: 5
    summary_freq: 1
    use_baseline: &use_baseline True
    normalize_advantage: False
    device: "gpu" # cpu/gpu
    compile: False
    compile_mode: "default"
    use_replay: True
    replay_batch_size: 15

hyper_params:
    max_ep_len: 27000 # maximum episode length (Note: this value must be strictly less than or equal to our batch size)
    num_batches: 50000 # number of batches trained on
    batch_size: 27000 # number of steps used to compute each policy update
    learning_rate: 0.01
    gamma: 0.99 # the discount factor
    n_layers: 2
    layer_size: 512

output:
    output_path: !join &output_path ["ModelWeights/", *env_name, "-{}-"]
    actor_output: !join [*output_path, "/actor.weights.pt"]
    critic_output: !join [*output_path, "/critic.weights.pt"]
    log_path: !join [*output_path, "/log.txt"]
    scores_output: !join [*output_path, "/scores.npy"]
    plot_output: !join [*output_path, "/scores.png"]
    record_path: !join [*output_path, "/VIDYA"]
